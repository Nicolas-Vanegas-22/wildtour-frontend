import{i as u}from"./index-BxPqZtyK.js";import{a as c}from"./apiClient-BOD3YzUN.js";import{h as d}from"./apiTypes-CHx9-Zzm.js";const n=[];for(let s=0;s<256;++s)n.push((s+256).toString(16).slice(1));function p(s,e=0){return(n[s[e+0]]+n[s[e+1]]+n[s[e+2]]+n[s[e+3]]+"-"+n[s[e+4]]+n[s[e+5]]+"-"+n[s[e+6]]+n[s[e+7]]+"-"+n[s[e+8]]+n[s[e+9]]+"-"+n[s[e+10]]+n[s[e+11]]+n[s[e+12]]+n[s[e+13]]+n[s[e+14]]+n[s[e+15]]).toLowerCase()}let m;const h=new Uint8Array(16);function w(){if(!m){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");m=crypto.getRandomValues.bind(crypto)}return m(h)}const y=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),g={randomUUID:y};function S(s,e,t){var r;s=s||{};const o=s.random??((r=s.rng)==null?void 0:r.call(s))??w();if(o.length<16)throw new Error("Random bytes length must be >= 16");return o[6]=o[6]&15|64,o[8]=o[8]&63|128,p(o)}function f(s,e,t){return g.randomUUID&&!s?g.randomUUID():S(s)}class v{constructor(){this.sessionId=null,this.sessionStartTime=null,this.initializeSession()}initializeSession(){const e=sessionStorage.getItem("session-id"),t=sessionStorage.getItem("session-start-time");e&&t?(this.sessionId=e,this.sessionStartTime=parseInt(t,10)):this.createNewSession()}createNewSession(){this.sessionId=f(),this.sessionStartTime=Date.now(),sessionStorage.setItem("session-id",this.sessionId),sessionStorage.setItem("session-start-time",this.sessionStartTime.toString())}getSessionId(){return this.sessionId||this.createNewSession(),this.sessionId}getSessionDuration(){return this.sessionStartTime?Date.now()-this.sessionStartTime:0}renewSession(){this.createNewSession()}endSession(){this.sessionId=null,this.sessionStartTime=null,sessionStorage.removeItem("session-id"),sessionStorage.removeItem("session-start-time")}getSessionInfo(){return{sessionId:this.sessionId,startTime:this.sessionStartTime,duration:this.getSessionDuration()}}}const l=new v;class I{async login(e){const t=Date.now();let o=!1,r;try{const i=(await c.post("/auth/login",e)).data;if(!i||!i.token)throw await this.logLoginAttempt(!1,e.email,"Invalid response from server"),new Error("Respuesta inválida del servidor");return o=!0,r=i.user.id.toString(),l.renewSession(),await this.logLoginAttempt(!0,e.email,void 0,{userId:r,sessionId:l.getSessionId(),loginDuration:Date.now()-t}),{token:i.token,expiresAt:i.expiresAt,user:{id:i.user.id,email:i.user.email,username:i.user.username||"",registrationDate:new Date().toISOString(),lastLoginDate:new Date().toISOString(),isEmailConfirmed:!1,isActive:!0,personId:0,role:i.user.roles.includes("Admin")?"admin":i.user.roles.includes("Prestador de Servicio")?"provider":"tourist",avatar:"",person:{id:0,firstName:i.user.firstName||"",lastName:i.user.lastName||"",document:0,phoneNumber:0}}}}catch(a){if(console.error("Login error:",a),!o){const i=d(a);await this.logLoginAttempt(!1,e.email,i)}throw new Error(d(a))}}async register(e){let t=!1;try{const r=(await c.post("/auth/register",e)).data;if(!r||!r.id)throw await this.logRegistrationAttempt(!1,e,"Invalid response from server"),new Error("Respuesta inválida del servidor");return t=!0,await this.logRegistrationAttempt(!0,e),await this.login({email:e.email,password:e.password})}catch(o){if(console.error("Register error:",o),!t){const r=d(o);await this.logRegistrationAttempt(!1,e,r)}throw new Error(d(o))}}async getProfile(e){try{const o=(await c.get("/auth/me")).data,r={id:o.id,email:o.email,username:o.username||"",registrationDate:new Date().toISOString(),lastLoginDate:new Date().toISOString(),isEmailConfirmed:!1,isActive:!0,personId:0,role:o.roles.includes("Admin")?"admin":o.roles.includes("Prestador de Servicio")?"provider":"tourist",avatar:"",person:{id:0,firstName:o.firstName||"",lastName:o.lastName||"",document:0,phoneNumber:0}};return await this.logProfileAccess(r.id.toString(),"accessed"),r}catch(t){throw console.error("Get profile error:",t),new Error(d(t))}}async forgotPassword(e){throw new Error("Endpoint /auth/forgot-password no implementado en el backend .NET")}async resetPassword(e){throw new Error("Endpoint /auth/reset-password no implementado en el backend .NET")}async refreshToken(e){throw new Error("Endpoint /auth/refresh no implementado en el backend .NET")}async logout(e){try{const t=l.getSessionInfo();await u.logEvent({eventType:"login_attempt",category:"security",severity:"low",description:"User logout - session ended",details:{action:"logout",sessionDuration:t.duration,sessionId:t.sessionId},sessionId:t.sessionId,ipAddress:"",userAgent:navigator.userAgent,endpoint:"/auth/logout",method:"POST",source:"wildtour-frontend",environment:"production",retentionPeriod:"7 years",shouldAutoDelete:!0,consentRequired:!1}),l.endSession()}catch(t){console.error("Logout error:",t),l.endSession()}}async updateProfile(e,t){throw new Error("Endpoint /auth/profile PUT no implementado en el backend .NET")}async verifyEmail(e){throw new Error("Endpoint /auth/verify-email no implementado en el backend .NET")}async resendVerificationEmail(e){throw new Error("Endpoint /auth/resend-verification no implementado en el backend .NET")}async logLoginAttempt(e,t,o,r){try{await u.logEvent({eventType:"login_attempt",category:"security",severity:e?"low":"medium",description:`Login attempt ${e?"successful":"failed"}${t?` for ${t}`:""}`,details:{success:e,email:t,reason:o,...r},userEmail:t,ipAddress:"",userAgent:navigator.userAgent,endpoint:"/auth/login",method:"POST",source:"wildtour-frontend",environment:"production",retentionPeriod:"7 years",shouldAutoDelete:!0,consentRequired:!1})}catch(a){console.error("Failed to log login attempt:",a)}}async logRegistrationAttempt(e,t,o){try{await u.logEvent({eventType:"data_modification",category:"privacy",severity:"medium",description:`User registration ${e?"successful":"failed"}`,details:{success:e,email:t.email,roleId:t.roleId,reason:o},userEmail:t.email,ipAddress:"",userAgent:navigator.userAgent,endpoint:"/auth/register",method:"POST",dataCategories:["personal_data","contact_data"],dataFields:["email","firstName","lastName","document","phoneNumber"],legalBasis:"Article 6 Law 1581/2012 - Consent",consentRequired:!0,consentStatus:e?"granted":"missing",source:"wildtour-frontend",environment:"production",retentionPeriod:"5 years",shouldAutoDelete:!0})}catch(r){console.error("Failed to log registration attempt:",r)}}async logProfileAccess(e,t){try{await u.logEvent({eventType:"data_access",category:"privacy",severity:"low",description:`Profile ${t}`,details:{action:t},userId:e,ipAddress:"",userAgent:navigator.userAgent,endpoint:"/auth/profile",method:t==="update"?"PUT":"GET",dataCategories:["personal_data"],dataFields:["email","firstName","lastName","avatar"],legalBasis:"Legitimate interest - Service provision",consentRequired:!0,consentStatus:"granted",source:"wildtour-frontend",environment:"production",retentionPeriod:"5 years",shouldAutoDelete:!0})}catch(o){console.error("Failed to log profile access:",o)}}}const N=new I;export{N as a};
